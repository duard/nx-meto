{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/config.ts","webpack:///./apps/api/src/app/database.config.ts","webpack:///./apps/api/src/app/modules/menu/menu.controller.ts","webpack:///./apps/api/src/app/modules/menu/menu.entity.ts","webpack:///./apps/api/src/app/modules/menu/menu.module.ts","webpack:///./apps/api/src/app/modules/menu/menu.service.ts","webpack:///./apps/api/src/app/modules/profile/profile.controller.ts","webpack:///./apps/api/src/app/modules/profile/profile.entity.ts","webpack:///./apps/api/src/app/modules/profile/profile.module.ts","webpack:///./apps/api/src/app/modules/profile/profile.service.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/api-cruds/src/index.ts","webpack:///./libs/api-cruds/src/lib/cargos/cargos.controller.ts","webpack:///./libs/api-cruds/src/lib/cargos/cargos.module.ts","webpack:///./libs/api-cruds/src/lib/cargos/cargos.service.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.controller.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.module.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.service.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.controller.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.module.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.service.ts","webpack:///./libs/api-database/src/index.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.controller.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.module.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.service.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///./libs/api-interfaces/src/lib/entities/cargos.entity.ts","webpack:///./libs/api-interfaces/src/lib/entities/escolaridades.entity.ts","webpack:///./libs/api-interfaces/src/lib/entities/locais.entity.ts","webpack:///./libs/shared-things/src/index.ts","webpack:///./libs/shared-things/src/lib/classes/password.ts","webpack:///./libs/shared-things/src/lib/dto/query.dto.ts","webpack:///./libs/shared-things/src/lib/enums/error.messages.enum.ts","webpack:///./libs/shared-things/src/lib/enums/messages.enum.ts","webpack:///./libs/shared-things/src/lib/enums/messagesv2.enum.ts","webpack:///./libs/shared-things/src/lib/enums/sankhya-endpoints.enum.ts","webpack:///./libs/shared-things/src/lib/pipes/validation.pipe.ts","webpack:///./libs/shared-things/src/lib/services/config.service.ts","webpack:///./libs/shared-things/src/lib/shared-things.module.ts","webpack:///./libs/shared-things/src/lib/utils/date.utils.ts","webpack:///./libs/shared-things/src/lib/utils/email.utils.ts","webpack:///./libs/shared-things/src/lib/utils/file-upload.utils.ts","webpack:///./libs/shared-things/src/lib/utils/format-data.utils.ts","webpack:///./libs/shared-things/src/lib/utils/jwt.utils.ts","webpack:///./libs/shared-things/src/lib/utils/password.utils.ts","webpack:///./libs/shared-things/src/lib/utils/search-transform.utils.ts","webpack:///./libs/shared-things/src/lib/utils/snake-naming.strategy.ts","webpack:///external \"@nest-middlewares/helmet\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/common/exceptions/http.exception\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"@nestjsx/crud\"","webpack:///external \"@nestjsx/crud-typeorm\"","webpack:///external \"bcryptjs\"","webpack:///external \"class-transformer\"","webpack:///external \"class-validator\"","webpack:///external \"crypto-random-string\"","webpack:///external \"dotenv\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"moment\"","webpack:///external \"nodemailer\"","webpack:///external \"nodemailer-sendgrid\"","webpack:///external \"path\"","webpack:///external \"pug\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"typeorm/util/StringUtils\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get, Query } from '@nestjs/common';\n\nimport { Message } from '@meto/api-interfaces';\n\nimport { AppService } from './app.service';\nimport { ApiDatabaseService } from '@meto/api-database';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private apiDB: ApiDatabaseService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n\n  @Get('menu')\n  async rawSql(@Query() query): Promise<any[]> {\n    return this.apiDB.rawSQL(\n      `SELECT * FROM G033 P, G032 M WHERE P.IDG032=M.IDG032 AND P.IDG031='1' AND M.DELETED='N' AND M.STS='A'   ORDER BY M.ORDEM  ASC`\n    );\n  }\n}\n","import { CargosModule, EscolaridadesModule, LocaisModule } from '@meto/api-cruds';\nimport { ApiDatabaseModule, ApiDatabaseService } from '@meto/api-database';\nimport { HelmetMiddleware } from '@nest-middlewares/helmet';\nimport { Logger, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { config } from './config';\nimport { DatabaseConfig } from './database.config';\nimport { MenuModule } from './modules/menu/menu.module';\nimport { ProfileModule } from './modules/profile/profile.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    HelmetMiddleware,\n    ApiDatabaseModule,\n    MenuModule,\n    ProfileModule,\n    CargosModule,\n    LocaisModule,\n    EscolaridadesModule,\n    // GraphQLModule.forRoot({\n    //   typePaths: ['./**/*.graphql'],\n    //   definitions: { path: join(process.cwd(), 'src/graphql.ts') },\n    //   context: ({ req }) => ({ headers: req.headers }),\n    // }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n\n    // TypeOrmModule.forRootAsync({\n    //   imports: [SharedThingsModule],\n    //   useFactory: (configService: ConfigService) => configService.typeOrmConfig,\n    //   inject: [ConfigService],\n    // }),\n  ],\n  controllers: [AppController],\n  providers: [AppService, ApiDatabaseService],\n})\nexport class AppModule {\n  constructor() {\n    console.log('\\n\\n', '=> ', process.env.NODE_ENV);\n    console.log('\\n\\n', 'PORT =>', process.env.PORT);\n\n    console.log('=> ', __dirname);\n    Logger.debug('ENVIRONMENT =>', process.env.NODE_ENV);\n    Logger.debug('PORT =>', process.env.PORT);\n    Logger.debug('API_METO_PORT =>', process.env.API_METO_PORT);\n    Logger.debug('HOSTNAME =>', process.env.DB_METO_HOSTNAME);\n    Logger.debug('USERNAME =>', process.env.DB_METO_USERNAME);\n    Logger.debug('PASSWORD =>', process.env.DB_METO_PASSWORD);\n    Logger.debug(': DATABASE', process.env.DB_METO_DATABASE);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { Message } from '@meto/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): any {\n    return { message: 'Welcome to api!', hora: new Date() };\n  }\n}\n","import { CargoEntity, EscolaridadeEntity } from '@meto/api-interfaces';\n\nexport const config = () => ({\n  port: Number(process.env.PORT),\n  jwtSecret: process.env.JWT_SECRET,\n  database: {\n    type: 'mysql',\n    host: process.env.DB_METO_HOSTNAME,\n    port: 3306,\n    username: process.env.DB_METO_USERNAME,\n    password: process.env.DB_METO_PASSWORD,\n    database: process.env.DB_METO_DATABASE,\n    synchronize: false,\n    logging: true,\n    autoLoadEntities: true\n  },\n});\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createTypeOrmOptions() {\n    const dbConfig = this.configService.get('database');\n    console.log('DB CONFIG', dbConfig)\n    return this.configService.get('database');\n  }\n}\n","import { Controller, Query } from '@nestjs/common';\nimport { Crud, CrudController, CrudRequest, Override, ParsedRequest } from '@nestjsx/crud';\n// import { QueryDto } from '../../../shared/dto/query.dto';\n\nimport { Menu } from './menu.entity';\nimport { MenuService } from './menu.service';\nimport { QueryDto } from '@meto/shared-things';\n\n@Crud({\n  model: {\n    type: Menu,\n  },\n  query: {\n    alwaysPaginate: true,\n    // limit: 10,\n    sort: [{ field: 'id', order: 'DESC' }],\n    join: {\n      menus: {\n        allow: [],\n      },\n      menu: {\n        allow: [],\n      },\n      profiles: {\n        allow: [],\n      },\n    },\n  },\n})\n@Controller('menus')\nexport class MenuController implements CrudController<Menu> {\n  constructor(public service: MenuService) {}\n\n  get base(): CrudController<Menu> {\n    return this;\n  }\n\n  @Override()\n  getMany(@ParsedRequest() req: CrudRequest, @Query() query: QueryDto) {\n    if (query.orderType) {\n      const order: any = query.orderType.toUpperCase();\n      req.options.query.sort = [{ order, field: query.orderBy }];\n    }\n\n    return this.base.getManyBase(req);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { CrudValidationGroups } from '@nestjsx/crud';\nimport { IsDefined, IsInt, IsOptional, IsString } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  ManyToMany,\n  JoinTable,\n  RelationId,\n} from 'typeorm';\nimport { MESSAGES } from '@meto/shared-things';\nimport { Profile } from '../profile/profile.entity';\n\nconst { CREATE, UPDATE } = CrudValidationGroups;\n\n@Entity('menus')\nexport class Menu {\n  @ApiProperty()\n  @IsOptional({ always: true })\n  @PrimaryGeneratedColumn({ name: 'id_menu' })\n  id: number;\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @OneToMany(type => Menu, menu => menu.menu, { cascade: true, nullable: true, eager: true })\n  menus: Menu[];\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @ManyToOne(type => Menu, menu => menu.menus)\n  @JoinColumn({ name: 'id_menupai' })\n  menu: Menu;\n\n  @Column({ name: 'id_menupai', nullable: true })\n  parentId: number;\n\n  @ApiProperty()\n  @IsInt({ message: MESSAGES.IS_INT })\n  @IsOptional({ groups: [UPDATE] })\n  @IsDefined({ groups: [CREATE], message: MESSAGES.NOT_EMPTY })\n  @Column({ name: 'nr_ordem', nullable: false, type: 'smallint' })\n  index: number;\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @IsDefined({ groups: [CREATE], message: MESSAGES.NOT_EMPTY })\n  @IsString({ message: MESSAGES.IS_STRING })\n  @Column({ name: 'nm_menu', type: 'varchar', nullable: false, length: 50 })\n  title: string;\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @IsDefined({ groups: [CREATE], message: MESSAGES.NOT_EMPTY })\n  @IsString({ message: MESSAGES.IS_STRING })\n  @Column({ name: 'ur_menu', type: 'varchar', nullable: false, length: 250 })\n  url: string;\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @IsString({ message: MESSAGES.IS_STRING })\n  @Column({ name: 'nm_icone', type: 'varchar', length: 30, nullable: true })\n  icon: string;\n\n  @IsOptional({ groups: [CREATE, UPDATE] })\n  @ManyToMany(() => Profile)\n  @JoinTable({\n    name: 'perfil_menu',\n    joinColumn: { name: 'id_menu', referencedColumnName: 'id' },\n    inverseJoinColumn: { name: 'id_perfil', referencedColumnName: 'id' },\n  })\n  profiles: Profile[];\n\n  @ApiProperty()\n  @Column({ name: 'sn_ativo', type: 'smallint', default: 1 })\n  status: number;\n\n  @Column({ name: 'dt_cadast', type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({ name: 'dt_altera', type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { MenuController } from './menu.controller';\nimport { MenuService } from './menu.service';\nimport { Menu } from './menu.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Menu,\n    ]),\n  ],\n  controllers: [MenuController],\n  providers: [MenuService],\n})\nexport class MenuModule { }\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Menu } from './menu.entity';\n\n@Injectable()\nexport class MenuService extends TypeOrmCrudService<Menu> {\n  constructor(\n    @InjectRepository(Menu)\n    private readonly menuRepository: Repository<Menu>,\n  ) {\n    super(menuRepository);\n  }\n}\n","import { Controller, Query } from '@nestjs/common';\nimport { Crud, CrudController, CrudRequest, Override, ParsedBody, ParsedRequest } from '@nestjsx/crud';\n\nimport { Profile } from './profile.entity';\nimport { ProfileService } from './profile.service';\nimport { parseSearch } from '@meto/shared-things';\n\n@Crud({\n  model: {\n    type: Profile,\n  },\n  query: {\n    alwaysPaginate: true,\n    limit: 10,\n    sort: [{ field: 'id', order: 'DESC' }],\n    join: {\n      menus: {\n        allow: [],\n      },\n    },\n  },\n})\n@Controller('profiles')\nexport class ProfileController implements CrudController<Profile> {\n  constructor(public service: ProfileService) {}\n\n  get base(): CrudController<Profile> {\n    return this;\n  }\n\n  @Override()\n  getMany(\n    @ParsedRequest() req: CrudRequest,\n    @Query() query: { search: string; searchBy: string; orderBy: string; orderType: any }\n  ) {\n    const { search, searchBy, orderBy, orderType } = query;\n\n    if (orderType) {\n      const order: any = orderType.toUpperCase();\n      req.options.query.sort = [{ order, field: orderBy }];\n    }\n\n    if (search) {\n      const column = searchBy ? searchBy : 'name';\n      req.parsed.search.$and = parseSearch(search, column);\n    }\n\n    return this.base.getManyBase(req);\n  }\n\n  @Override()\n  createOneBase(@ParsedRequest() req: CrudRequest, @ParsedBody() body: Profile) {\n    console.log('body', body);\n    return this.base.createOneBase(req, body);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { CrudValidationGroups } from '@nestjsx/crud';\nimport { IsDefined, IsOptional, IsString, IsNumber } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n  ManyToMany,\n  JoinTable,\n} from 'typeorm';\nimport { Menu } from '../menu/menu.entity';\nimport { MESSAGES } from '@meto/shared-things';\n\nconst { CREATE, UPDATE } = CrudValidationGroups;\n\n@Entity('perfis')\nexport class Profile {\n  @ApiProperty()\n  @IsOptional({ always: true })\n  @PrimaryGeneratedColumn({ name: 'id_profile' })\n  id: number;\n\n  @ApiProperty()\n  @IsOptional({ groups: [UPDATE] })\n  @IsDefined({ groups: [CREATE], message: MESSAGES.NOT_EMPTY })\n  @IsString({ message: MESSAGES.IS_STRING })\n  @Column({ name: 'nm_perfil', length: 30, type: 'varchar', nullable: false })\n  name: string;\n\n  @ApiProperty()\n  @IsOptional({ groups: [CREATE, UPDATE] })\n  @ManyToMany(type => Menu, menu => menu.profiles, { cascade: true })\n  @JoinTable({\n    name: 'perfil_menu',\n    inverseJoinColumn: { name: 'id_menu', referencedColumnName: 'id' },\n    joinColumn: { name: 'id_perfil', referencedColumnName: 'id' },\n  })\n  menus: Menu[];\n\n  @Column({ name: 'dt_cadast', type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({ name: 'dt_altera', type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n}\n\n// @ManyToOne({ entity: () => Author })\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\nimport { Profile } from './profile.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      Profile,\n    ]),\n  ],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule { }\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { Repository } from 'typeorm';\n\nimport { Profile } from './profile.entity';\n\n@Injectable()\nexport class ProfileService extends TypeOrmCrudService<Profile> {\n  constructor(\n    @InjectRepository(Profile)\n    private readonly profileRepository: Repository<Profile>,\n  ) {\n    super(profileRepository);\n  }\n\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport { BunyanLoggerService } from '@lupu60/nestjs-toolbox';\nimport { Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nimport { ValidationPipe } from '@meto/shared-things';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  // const app = await NestFactory.create(AppModule, {\n  //   logger: new BunyanLoggerService({\n  //     projectName: 'SIMPLES',\n  //     formatterOptions: {\n  //       outputMode: 'short',\n  //       color: true,\n  //       levelInString: true,\n  //       // colorFromLevel: any\n  //     },\n  //     customStreams: [\n  //       {\n  //         path: './api-log.log',\n  //       },\n  //     ],\n  //   }),\n  // });\n  const app = await NestFactory.create(AppModule);\n\n  app.useGlobalPipes(new ValidationPipe());\n\n  // const app = await NestFactory.create(AppModule, { logger: true });\n  // app.useLogger(app.get(Logger));\n\n  app.enableCors();\n  const configService = app.get(ConfigService);\n\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\n  const options = new DocumentBuilder()\n    .setTitle('Simples API Carlos')\n    .setDescription('API NestJS para Base')\n    .setVersion('1.0')\n    // .setBasePath('api')\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('/docs', app, document);\n  const PORT = process.env.PORT || 3333;\n\n  await app.listen(PORT, () => {\n    Logger.debug('AMBIENTE =>', process.env.NODE_ENV);\n    Logger.debug('PORT =>', process.env.PORT);\n    Logger.debug('API_METO_PORT =>', process.env.API_METO_PORT);\n    Logger.debug('HOSTNAME =>', process.env.DB_METO_HOSTNAME);\n    Logger.debug('USERNAME =>', process.env.DB_METO_USERNAME);\n    Logger.debug('PASSWORD =>', process.env.DB_METO_PASSWORD);\n    Logger.debug(': DATABASE', process.env.DB_METO_DATABASE);\n    Logger.debug('Listening at http://localhost:' + process.env.PORT || 3000 + '/' + globalPrefix);\n    console.log(`Listening on ${PORT}`);\n  });\n}\n\nbootstrap();\n","export * from './lib/cargos/cargos.module';\nexport * from './lib/escolaridades/escolaridades.module';\nexport * from './lib/locais/locais.module';\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { CargoEntity } from '@meto/api-interfaces';\nimport { CargosService } from './cargos.service';\n\n@Crud({\n  model: {\n    type: CargoEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDE001',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('cargos')\nexport class CargosController implements CrudController<CargoEntity> {\n  constructor(public service: CargosService) {}\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CargoEntity } from '@meto/api-interfaces';\nimport { CargosController } from './cargos.controller';\nimport { CargosService } from './cargos.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CargoEntity])],\n  controllers: [CargosController],\n  providers: [CargosService],\n})\nexport class CargosModule {}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CargoEntity } from '@meto/api-interfaces';\n\n\n@Injectable()\nexport class CargosService extends TypeOrmCrudService<CargoEntity> {\n  constructor(@InjectRepository(CargoEntity) thisRepository: Repository<CargoEntity>) {\n    super(thisRepository);\n  }\n}\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { CargoEntity, EscolaridadeEntity } from '@meto/api-interfaces';\nimport { EscolaridadesService } from './escolaridades.service';\n\n@Crud({\n  model: {\n    type: CargoEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDE002',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('escolaridades')\nexport class EscolaridadesController implements CrudController<EscolaridadeEntity> {\n  constructor(public service: EscolaridadesService) {}\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EscolaridadeEntity } from '@meto/api-interfaces';\nimport { EscolaridadesController } from './escolaridades.controller';\nimport { EscolaridadesService } from './escolaridades.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([EscolaridadeEntity])],\n  controllers: [EscolaridadesController],\n  providers: [EscolaridadesService],\n})\nexport class EscolaridadesModule {}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { EscolaridadeEntity  } from '@meto/api-interfaces';\n\n@Injectable()\nexport class EscolaridadesService extends TypeOrmCrudService<EscolaridadeEntity> {\n  constructor(@InjectRepository(EscolaridadeEntity) thisRepository: Repository<EscolaridadeEntity>) {\n    super(thisRepository);\n  }\n}\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { LocalEntity } from '@meto/api-interfaces';\nimport { LocaisService } from './locais.service';\n\n@Crud({\n  model: {\n    type: LocalEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDG004',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('locais')\nexport class LocaisController implements CrudController<LocalEntity> {\n  constructor(public service: LocaisService) {}\n}\n","import { LocalEntity } from '@meto/api-interfaces';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { LocaisController } from './locais.controller';\nimport { LocaisService } from './locais.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([LocalEntity])],\n  controllers: [LocaisController],\n  providers: [LocaisService],\n})\nexport class LocaisModule {}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { LocalEntity } from '@meto/api-interfaces';\n\n@Injectable()\nexport class LocaisService extends TypeOrmCrudService<LocalEntity> {\n  constructor(@InjectRepository(LocalEntity) thisRepository: Repository<LocalEntity>) {\n    super(thisRepository);\n  }\n}\n","export * from './lib/api-database/api-database.module';\nexport * from './lib/api-database/api-database.service';\n","import { Controller, Get, Logger, Param, Query } from '@nestjs/common';\n\nimport { ApiDatabaseService } from './api-database.service';\nimport { get } from 'http';\n\n@Controller('api-database')\nexport class ApiDatabaseController {\n  constructor(private apiDatabaseService: ApiDatabaseService) {}\n\n  @Get('raw-sql')\n  async rawSql(@Query() query): Promise<any[]> {\n    return this.apiDatabaseService.rawSQL(query.querySQL);\n  }\n\n  @Get('table-fields')\n  async tableFields(@Query() query): Promise<any[]> {\n    return this.apiDatabaseService.tableFields(query.tableName);\n  }\n}\n\n\n// http://localhost:3333/api/api-database/raw-sql?querySQL=select%20*%20from%20G026\n// http://localhost:3333/api/api-database/table-fields?tableName=G034\n","import { Module } from '@nestjs/common';\nimport { ApiDatabaseController } from './api-database.controller';\nimport { ApiDatabaseService } from './api-database.service';\n\n@Module({\n  controllers: [ApiDatabaseController],\n  providers: [ApiDatabaseService],\n  exports: [],\n})\nexport class ApiDatabaseModule {}\n","import { Injectable } from '@nestjs/common';\nimport { EntityManager } from 'typeorm';\n\n@Injectable()\nexport class ApiDatabaseService {\n  constructor(private readonly entityManager: EntityManager) {}\n\n  async rawSQL(sqlQuery: any) {\n    const rawData = await this.entityManager.query(sqlQuery);\n    return rawData;\n  }\n\n  tableFields(tableName: string) {\n    const rawData = this.entityManager.query(`SHOW COLUMNS FROM ${tableName}`);\n    return rawData;\n  }\n}\n\n// const rawData = await manager.query(`SELECT * FROM USERS`);\n// `SHOW COLUMNS FROM City`\n","\nexport * from './lib/interfaces/api-interfaces';\nexport * from './lib/entities/cargos.entity';\n\nexport * from './lib/entities/locais.entity';\n\nexport * from './lib/entities/escolaridades.entity';\n\n// export * from './lib/cargos/cargos.entity';\nexport * from './lib/interfaces/cargos.interface';\n// export * from './lib/escolaridades/escolaridades.entity';\nexport * from './lib/interfaces/escolaridades.interface';\n\n\n// export * from './lib/entities/A001';\n// export * from './lib/entities/Configuracoes';\n// export * from './lib/entities/CotasPercentuais';\n// export * from './lib/entities/E001';\n// export * from './lib/entities/E002';\n// export * from './lib/entities/E003';\n// export * from './lib/entities/E004';\n\n\n","\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('E001')\nexport class CargoEntity  {\n  @PrimaryGeneratedColumn()\n  IDE001: number;\n\n  @Column({unique: true, length: 60})\n  NOME: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  CREATED: Date;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  UPDATED: Date;\n\n  @Column({ default: 'N', length: 1})\n  DELETED: string;\n\n  @Column({ default: 'A', length: 1 })\n  STS: string;\n\n}\n","\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n// @Entity('E002')\n@Entity({ name: 'E002' })\nexport class EscolaridadeEntity {\n  @PrimaryGeneratedColumn()\n  IDE002: number;\n\n  @Column({ unique: true, length: 60 })\n  NOME: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  CREATED: Date;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  UPDATED: Date;\n\n  @Column({ default: 'N', length: 1 })\n  DELETED: string;\n\n  @Column({ default: 'A', length: 1 })\n  STS: string;\n}\n","import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Index('FK_G002IDG002_IDG002_idx', ['idg002'], {})\n@Index('FK_G004_G019_idx', ['idg019'], {})\n@Index('FK_G004_G021_idx', ['idg021'], {})\n@Index('FK_G004IDG004FK_IDG004', ['idg004Fk'], {})\n@Index('FK_IDE005_IDE005_idx', ['ide005'], {})\n@Index('FK_IDG002_IDG002_idx', ['idg002'], {})\n@Index('FK_IDG003_IDG003_idx', ['idg003'], {})\n@Index('FK_RUBRICACOTAREG_IDG019_idx', ['rubricacotareg'], {})\n@Index('FK_RUBRICAPEC_IDG019_idx', ['rubricapec'], {})\n@Index('FK_SEDE_IDG001_idx', ['sede'], {})\n@Index('G004_UN', ['cnpj'], { unique: true })\n@Entity('G004', { schema: 'metodista_local' })\nexport class LocalEntity {\n  @PrimaryGeneratedColumn({ type: 'int', name: 'IDG004' })\n  idg004: number;\n\n  @Column('int', { name: 'IDG003', nullable: true })\n  idg003: number | null;\n\n  @Column('varchar', { name: 'NOME', nullable: true, length: 60 })\n  nome: string | null;\n\n  @Column('varchar', { name: 'CNPJ', nullable: true, unique: true, length: 18 })\n  cnpj: string | null;\n\n  @Column('date', { name: 'FUNDACAO', nullable: true })\n  fundacao: string | null;\n\n  @Column('int', { name: 'IDE005', nullable: true })\n  ide005: number | null;\n\n  @Column('varchar', { name: 'OBSERVAC', nullable: true, length: 500 })\n  observac: string | null;\n\n  @Column('varchar', { name: 'EMAILINS', nullable: true, length: 60 })\n  emailins: string | null;\n\n  @Column('varchar', { name: 'SITE', nullable: true, length: 60 })\n  site: string | null;\n\n  @Column('varchar', { name: 'FACEBOOK', nullable: true, length: 60 })\n  facebook: string | null;\n\n  @Column('varchar', { name: 'TWITTER', nullable: true, length: 60 })\n  twitter: string | null;\n\n  @Column('varchar', { name: 'YOUTUBE', nullable: true, length: 60 })\n  youtube: string | null;\n\n  @Column('varchar', { name: 'INSTAG', nullable: true, length: 60 })\n  instag: string | null;\n\n  @Column('varchar', { name: 'TEL1', nullable: true, length: 45 })\n  tel1: string | null;\n\n  @Column('varchar', { name: 'TEL2', nullable: true, length: 45 })\n  tel2: string | null;\n\n  @Column('varchar', { name: 'TEL3', nullable: true, length: 45 })\n  tel3: string | null;\n\n  @Column('varchar', { name: 'TEL4', nullable: true, length: 45 })\n  tel4: string | null;\n\n  @Column('datetime', { name: 'CREATED', nullable: true })\n  created: Date | null;\n\n  @Column('datetime', { name: 'UPDATED', nullable: true })\n  updated: Date | null;\n\n  @Column('varchar', {\n    name: 'DELETED',\n    nullable: true,\n    length: 1,\n    default: () => \"'N'\",\n  })\n  deleted: string | null;\n\n  @Column('varchar', {\n    name: 'STS',\n    nullable: true,\n    length: 1,\n    default: () => \"'A'\",\n  })\n  sts: string | null;\n\n  @Column('timestamp', {\n    name: 'DESCONTO_DT',\n    default: () => \"'1970-01-01 03:00:01'\",\n  })\n  descontoDt: Date;\n\n  @Column('decimal', {\n    name: 'DESCONTO_PERCENTUAL',\n    nullable: true,\n    precision: 10,\n    scale: 2,\n  })\n  descontoPercentual: string | null;\n\n  @Column('varchar', { name: 'CEP', nullable: true, length: 9 })\n  cep: string | null;\n\n  @Column('varchar', { name: 'LOGRADOU', nullable: true, length: 45 })\n  logradou: string | null;\n\n  @Column('int', { name: 'NUMERO', nullable: true })\n  numero: number | null;\n\n  @Column('varchar', { name: 'COMPLEM', nullable: true, length: 60 })\n  complem: string | null;\n\n  @Column('varchar', { name: 'BAIRRO', nullable: true, length: 60 })\n  bairro: string | null;\n\n  @Column('varchar', { name: 'CIDADE', nullable: true, length: 60 })\n  cidade: string | null;\n\n  @Column('varchar', { name: 'ESTADO', nullable: true, length: 2 })\n  estado: string | null;\n\n  @Column('varchar', { name: 'HISTORIA', nullable: true, length: 60000 })\n  historia: string | null;\n\n  @Column('int', { name: 'IDG002', nullable: true })\n  idg002: number | null;\n\n  @Column('varchar', { name: 'EMAILPAS', nullable: true, length: 60 })\n  emailpas: string | null;\n\n  @Column('varchar', { name: 'EMAILSEC', nullable: true, length: 60 })\n  emailsec: string | null;\n\n  @Column('int', { name: 'IDG004FK', nullable: true })\n  idg004Fk: number | null;\n\n  @Column('int', { name: 'SEDE', nullable: true })\n  sede: number | null;\n\n  @Column('int', { name: 'IDG019', nullable: true })\n  idg019: number | null;\n\n  @Column('int', { name: 'IDG021', nullable: true })\n  idg021: number | null;\n\n  @Column('varchar', { name: 'RAZAOSOCIAL', nullable: true, length: 100 })\n  razaosocial: string | null;\n\n  @Column('int', { name: 'RUBRICAPEC', nullable: true })\n  rubricapec: number | null;\n\n  @Column('int', { name: 'RUBRICACOTAREG', nullable: true })\n  rubricacotareg: number | null;\n}\n","export * from './lib/services/config.service';\nexport * from './lib/classes/password';\n\nexport * from './lib/utils/snake-naming.strategy';\nexport * from './lib/utils/date.utils';\nexport * from './lib/utils/email.utils';\nexport * from './lib/utils/file-upload.utils';\nexport * from './lib/utils/format-data.utils';\nexport * from './lib/utils/jwt.utils';\nexport * from './lib/utils/password.utils';\nexport * from './lib/utils/search-transform.utils';\n\nexport * from './lib/shared-things.module';\nexport * from './lib/pipes/validation.pipe';\n\nexport * from './lib/dto/query.dto';\n\nexport * from './lib/enums/messages.enum';\nexport * from './lib/enums/error.messages.enum';\nexport * from './lib/enums/messagesv2.enum';\nexport * from './lib/enums/sankhya-endpoints.enum';\n","export class Password {\n  plainText: string;\n  hash: string;\n}","import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional } from 'class-validator';\n\nexport class QueryDto {\n\n  @ApiProperty()\n  @IsOptional()\n  limit: number;\n\n  @ApiProperty()\n  @IsOptional()\n  offset: number;\n\n  @ApiProperty()\n  @IsOptional()\n  searchBy: any | any[];\n\n  @ApiProperty()\n  @IsOptional()\n  search: string;\n\n  @ApiProperty()\n  @IsOptional()\n  orderBy: string;\n\n  @ApiProperty()\n  @IsOptional()\n  orderType: string;\n\n  @ApiProperty()\n  @IsOptional()\n  status: any;\n}\n","export enum ERROR_MESSAGES {\n  BAD_REQUEST = 'Dados mal formatados.',\n  INTERNAL_SERVER_ERROR = 'Erro interno no servidor.',\n  NOT_FOUND = 'Dados não encontrados.',\n  SERVICE_UNAVAILABLE = 'Serviço indisponível.',\n  NOT_ACCEPTABLE = 'Não aceitável',\n  TOKEN_FORBIDDEN = 'Acesso negado! Token inválido ou não informado',\n  ROLE_FORBIDDEN = 'Acesso negado! Sem permissão',\n  FIREBASE_TOKEN_NOT_FOUND = 'Token não encontrado',\n  ICX_INTERNAL_SERVER_ERROR = 'Erro ao tentar conectar com o ICX',\n  ICX_REF_NOT_FOUND = 'Id de referência do ICX não foi encontrado',\n  ORDER_NOT_FOUND = 'Pedido não encontrado.',\n}\n","export enum MESSAGES {\n  DELETED = 'Registro deletado com sucesso',\n  NOT_FOUND = 'Registro inexistente!',\n  ZIP_CODE_NOT_FOUND = 'Cep não encontrado',\n  MAX_LENGTH = 'Limite máximo de caracteres excedido',\n  NOT_EMPTY = 'Campo obrigatório',\n  IS_INT = 'O campo deve ser do tipo inteiro',\n  IS_STRING = 'O campo deve ser do tipo string',\n  IS_ARRAY = 'O campo deve ser do tipo array',\n  IS_ARRAY_OBJECT = 'O campo deve ser do tipo array de objetos',\n  IS_OBJECT = 'O campo deve ser do tipo objeto.',\n  IS_DATETIME = 'O campo deve ser do tipo datetime YYYY-MM-DDTHH:mm:ssZ',\n  IS_DATE = 'O campo deve ser do tipo date YYYY-MM-DD',\n  IS_TIME = 'O campo deve ser do tipo date HH:mm',\n  PERIOD = 'Os valores permitidos são: morning, evening, nocturnal',\n  ALREADY_BEEN_ACCEPTED = 'A ordem de trabalho já foi aceita',\n  COLLECTION_ORDER_ALREADY_BEEN_ACCEPTED = 'A ordem de coleta já foi aceita',\n  ALREADY_BEEN_ACCEPTED_WORK_ORDER = 'Este horário já está agendado em outra ordem de trabalho.',\n  REJECTED_SCHEDULE = 'Instalação rejeitada com sucesso.',\n  CANCELED_SCHEDULE = 'Instalação cancelada com sucesso.',\n  SEND_CONFIRMATION_EMAIL = 'Um e-mail de confirmação foi enviado para seu e-mail de cadastro',\n  STATUS_SCHEDULE = 'O status foi atualizado com sucesso',\n  UPDATE_TERM_USE_STATUS = 'O status foi atualizado com sucesso',\n  NOT_ACCEPTED_TERM_USE = 'O termo de uso não foi aceito',\n  PENDING_TECHNICIAN = 'O instalador não está apto para receber ofertas!',\n  INVALID_INSTALLATION_ZIP_CODE = 'Código do instalador inválido!',\n  MESSAGE_BLOCK = 'Dados inválidos, seu login foi bloqueado, um link de redefinição de senha foi enviado para seu e-mail de cadastro!',\n  CUSTOMER_NOT_FOUND = 'Assinante não encontrado!',\n  TECHNICIAN_NOT_FOUND = 'Técnico não encontrado!',\n\n\n  MSG006 = 'Usuário já cadastrado.',\n}","export enum MESSAGES_V2 {\n  MSG001 = 'Operação realizada com sucesso.',\n  MSG002 = 'Dados obrigatórios não informados.',\n  MSG003 = 'Deseja realmente efetuar a operação de <nome da operação>? (Sim/Não).',\n  MSG004 = 'Nenhum registro encontrado.',\n  MSG005 = 'Informe ao menos um critério de pesquisa para prosseguir com a operação.',\n  MSG006 = 'Usuário já cadastrado.',\n  MSG007 = 'Código do estabelecimento já cadastrado.',\n  MSG008 = 'Percentual de desconto em fatura maior que 100%.',\n  MSG009 = 'O valor deve ser superior a 0.',\n  MSG010 = 'Data inválida.',\n  MSG011 = 'A data inicial não deve ser maior que a data final.',\n  MSG012 = 'A data final não deve ser maior que a data atual.',\n  MSG013 = 'A data inicial não deve ser menor que a data atual.',\n  MSG014 = '<> inválido.',\n  MSG015 = 'Código inválido.',\n  MSG016 = 'Inclusão/Alteração de <> não permitida!',\n  MSG017 = 'Exclusão não permitida!',\n  MSG018 = 'Cancelamento não permitido!',\n  MSG019 = 'Arquivo indisponível no <>.',\n  MSG020 = 'Operação de <> não permitida!',\n  MSG021 = 'Sincronização efetuada com sucesso',\n  MSG022 = 'Falta na sincronização, será sincronizada novamente após alguns minutos.',\n  MSG023 = 'Serial <> já foi informado na ordem de serviço <> com equipamento <>. Favor verificar!',\n  MSG024 = 'A ordem de serviço <> está com equipamento <> sem identificação do número de serial. Favor verificar!',\n  MSG025 = 'Alteração da <> não permitida! Ordem de Coleta já aceita pelo transportador <>',\n  MSG026 = 'Deseja realmente sair da aplicação? (Sim/Não).',\n  MSG027 = 'Existem informações que não foram salvas, deseja realmente sair sem salvar? (Sim/Não).',\n  MSG028 = 'Ordem de Coleta <> não está mais disponível.',\n  MSG029 = 'Você digitou a senha inválida! Você tem mais <> tentativas de Login restantes.',\n  MSG030 = 'Foi enviado um e-mail para <> com um link para o redefinir a senha.',\n  MSG031 = 'Formatado ou tamanho inválido! Somente serão aceitos arquivos <> com o tamanho máximo de <>',\n  MSG032 = 'Pedido de Venda <> não encontrado.',\n  MSG033 = 'CEP do pedido de venda <> diferente do CEP informado <>.',\n  MSG034 = 'Foi associado ao seu cadastro o usuário <> com CPF <>. Em caso de discordância entrar em contato com o suporte técnico.',\n  MSG035 = 'Existem data/horário conflitantes com o cadastrado. Verifique!',\n  MSG036 = 'A data/hora final deve ser maior que a data/hora inicial.',\n  MSG037 = 'Não é possível bloquear o período informado pois já existem agendamento.',\n  MSG038 = 'Não foi possível enviar os arquivos. Tente novamente.',\n  MSG039 = 'O aplicativo BluTec está liberado para uso. Veja o tutorial de como utilizar o Aplicativo BluTec.',\n  MSG040 = 'Ordem de Serviço <> não está mais disponível.',\n  MSG041 = 'CEP não encontrado.',\n}","export enum SankhyaEndpoint {\n  AUTHENTICATION = `/mge/service.sbr?serviceName=MobileLoginSP.login&outputType=json`,\n  CONSULT_IN_SANKHYA = `/mge/service.sbr?serviceName=DbExplorerSP.executeQuery&`,\n  FINISH_SESSION = `/mge/service.sbr?serviceName=MobileLoginSP.logout&outputType=json`,\n}\n","import { PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n  async transform(value, metadata: ArgumentMetadata) {\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException(\n        { message: 'Input data validation failed', errors: this.buildError(errors) },\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach(el => {\n      let prop = el.property;\n      Object.entries(el.constraints).forEach(constraint => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find(type => metatype === type);\n  }\n}\n","import { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport * as dotenv from 'dotenv';\nimport { SnakeNamingStrategy } from '../utils/snake-naming.strategy';\n\n// import { IAwsConfig } from '../../interfaces/IAwsConfig';\n// import { UserSubscriber } from '../entity-subscribers/user-subscriber';\n\nexport class ConfigService {\n  constructor() {\n    const nodeEnv = this.nodeEnv;\n    dotenv.config({\n      path: `.${nodeEnv}.env`,\n    });\n\n    // Replace \\\\n with \\n to support multiline strings in AWS\n    for (const envName of Object.keys(process.env)) {\n      process.env[envName] = process.env[envName].replace(/\\\\n/g, '\\n');\n    }\n  }\n\n  public get(key: string): string {\n    return process.env[key];\n  }\n\n  public getNumber(key: string): number {\n    return Number(this.get(key));\n  }\n\n  get nodeEnv(): string {\n    return this.get('NODE_ENV') || 'development';\n  }\n\n  get typeOrmConfig(): TypeOrmModuleOptions {\n    // let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}'];\n    // let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n    let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}',__dirname +  '../../libs/api-interfaces/**/*.entity{.ts,.js}'];\n    let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n\n    if ((<any>module).hot) {\n      const entityContext = (<any>require).context('./../../modules', true, /\\.entity\\.ts$/);\n      entities = entityContext.keys().map(id => {\n        const entityModule = entityContext(id);\n        const [entity] = Object.values(entityModule);\n        return entity;\n      });\n      const migrationContext = (<any>require).context('./../../migrations', false, /\\.ts$/);\n      migrations = migrationContext.keys().map(id => {\n        const migrationModule = migrationContext(id);\n        const [migration] = Object.values(migrationModule);\n        return migration;\n      });\n    }\n\n    return {\n      entities,\n      // migrations,\n      keepConnectionAlive: true,\n      type: 'mysql',\n      port: 3306,\n      host: this.get('DB_METO_HOST'),\n      username: this.get('DB_METO_USERNAME'),\n      password: this.get('DB_METO_PASSWORD'),\n      database: this.get('DB_METO_DATABASE'),\n      // username: process.env.DB_METO_USERNAME,\n      // password: process.env.DB_METO_PASSWORD,\n      // database: process.env.DB_METO_DATABASE,\n      // subscribers: [UserSubscriber],\n      migrationsRun: true,\n      logging: this.nodeEnv === 'development',\n      namingStrategy: new SnakeNamingStrategy(),\n      synchronize: false,\n      autoLoadEntities: true,\n    };\n  }\n\n  // get awsS3Config(): IAwsConfig {\n  //   return {\n  //     accessKeyId: this.get('AWS_S3_ACCESS_KEY_ID'),\n  //     secretAccessKey: this.get('AWS_S3_SECRET_ACCESS_KEY'),\n  //     bucketName: this.get('S3_BUCKET_NAME'),\n  //   };\n  // }\n}\n","import { Module } from '@nestjs/common';\nimport { ConfigService } from './services/config.service';\nconst providers = [ConfigService];\n@Module({\n  providers,\n  imports: [],\n\n  exports: [...providers],\n})\nexport class SharedThingsModule {}\n","import * as moment from 'moment';\nconst week = [\n  'Domingo',\n  'Segunda-feira',\n  'Terça-feira',\n  'Quarta-feira',\n  'Quinta-feira',\n  'Sexta-feira',\n  'Sábado',\n];\n\nexport const periods = {\n  morning: ['06:00', '11:59'],\n  evening: ['12:00', '17:59'],\n  nocturnal: ['18:00', '23:59'],\n};\n\nexport function compareTime(leftTime, rightTime) {\n  return moment.utc(rightTime).isAfter(leftTime);\n}\n\nexport function compareDateIsAfter(leftTime, rightTime) {\n  return moment.utc(leftTime).isAfter(rightTime);\n}\n\nexport function compareDateIsSameOrAfeter(leftTime, rightTime) {\n  return moment.utc(leftTime).isSameOrAfter(rightTime);\n}\n\nexport function isBetween(now, startDate, finalDate) {\n  return moment(now).isBetween(startDate, finalDate, 'day', '[]');\n}\n\nexport function getTimeInterval(startTime, endTime) {\n  const start = moment(startTime, 'HH:mm');\n  const end = moment(endTime, 'HH:mm');\n  const minutes = end.diff(start, 'minutes');\n  const interval = moment().hour(0).minute(minutes);\n\n  return interval.format('HH:mm');\n}\n\nexport function convertHoursToNumber(time) {\n  return moment.duration(time).asHours();\n}\n\nexport function dayWeekByDate(date) {\n  const dayWeekIndex = moment.utc(date).day();\n\n  return week[dayWeekIndex];\n}\n\nexport function monthByDate(date) {\n  const monthIndex = moment.utc(date).locale('pt-BR').format('MMM');\n  return monthIndex;\n}\n\nexport function dayWeekByIndex(index) {\n  return week[index];\n}\n\nexport function indexByDayWeek(dayWeek) {\n  const w = [\n    'Segunda-feira',\n    'Terça-feira',\n    'Quarta-feira',\n    'Quinta-feira',\n    'Sexta-feira',\n    'Sábado',\n    'Domingo',\n  ]\n  return w.findIndex(item => item === dayWeek) - 1;\n}\n\nexport function getRange(startDate, endDate, type) {\n  const fromDate = moment.utc(startDate);\n  const toDate = moment.utc(endDate);\n  const diff = toDate.diff(fromDate, type);\n  const range = [];\n\n  for (let i = 0; i < diff; i++) {\n    range.push(moment.utc(startDate).add(i, type));\n  }\n\n  return range;\n}\n\nexport function getNumberRange(start, end) {\n  return [...Array(end - start + 1)].map((_, i) => start + i);\n}\n\nexport function getCurrentDateWithoutHours() {\n  return moment().format('YYYY-MM-DD')\n}\n\nexport function formatDateWithoutHours(date) {\n  return moment(date).format('YYYY-MM-DD')\n}\n\nexport function formatDateHours(date) {\n  return moment(date).format('HH:MM:ss')\n}\n\nexport function formatDateWithHours(date) {\n  return moment.utc(date).format('YYYY-MM-DD HH:MM:ss')\n}\n\nexport function generateCodeWithCurrentDate() {\n  return moment().format('YYYYMMDDHHMMssSSS')\n}\n\nexport function generateCodePlp() {\n  return moment().format('YYYYMMDD')\n}\n\nexport function getDateNowWithouHours() {\n  return moment.utc().format('YYYY-MM-DD')\n}\n\nexport function calculatesTheDifferenceBetweenDates(initial, final) {\n  return moment(final).diff(moment(initial), 'days')\n}\n\nexport function addDays(date, days: number) {\n  return moment(date).add(days, 'day').format('YYYY-MM-DD');\n}\n\nexport function formatByType(date, type: string) {\n  switch (type) {\n    case 'Y':\n      return moment.utc(date).format('YYYY');\n      break;\n    case 'M':\n      return moment.utc(date).format('MM');\n      break;\n    case 'D':\n      return moment.utc(date).format('DD');\n      break;\n  }\n\n}","import * as nodemailer from 'nodemailer';\nimport * as nodemailerSendgrid from 'nodemailer-sendgrid';\nimport * as EmailTemplate from 'email-templates';\nimport * as path from 'path';\nimport * as Mail from 'nodemailer/lib/mailer';\n\nimport * as pug from 'pug';\n\nexport class Email {\n  email: Mail;\n\n  constructor() {}\n\n  send(to: string, title: string, html: string): Promise<any> {\n    console.log('process.env.EMAIL_HOST', process.env.EMAIL_HOST);\n\n    this.email = nodemailer.createTransport(nodemailerSendgrid({ apiKey: process.env.EMAIL_PASS }));\n\n    const blutvEnv = `blutv.${process.env.NODE_ENV}`;\n\n    return this.email.sendMail({\n      from: `BluTV - <credenciamento@blutv.com.br`,\n      to,\n      subject: title,\n      text: title,\n      html,\n    });\n  }\n\n  sendEmailPug(to: string, title: string, pathFile: string, params: any): Promise<any> {\n    console.log('process.env.EMAIL_HOST', process.env.EMAIL_HOST);\n\n    this.email = nodemailer.createTransport(nodemailerSendgrid({ apiKey: process.env.EMAIL_PASS }));\n\n    const blutvEnv = `blutv.${process.env.NODE_ENV}`;\n\n    return this.email.sendMail({\n      from: `BluTV - credenciamento@minhablutv.com.br`,\n      to,\n      subject: title,\n      text: title,\n      html: pug.renderFile(pathFile, params),\n    });\n  }\n\n  // sendTest(to: string, title: string, html: string) {\n  //   const mailer = nodemailer.createTransport(nodemailerSendgrid({ apiKey: process.env.EMAIL_PASS }));\n\n  //   const email = new EmailTemplate({\n  //     message: {\n  //       from: 'hi@example.com',\n  //     },\n  //     send: true,\n  //     transport: mailer,\n  //     // views: { root:  }\n  //   });\n\n  //   email.send({\n  //     template: 'template',\n  //     message: {\n  //       to,\n  //     },\n  //     locals: {\n  //       firstName: 'Elon',\n  //       lastName: 'test',\n  //     },\n  //   });\n  // }\n}\n","import { extname } from 'path';\n\nexport const imageFileFilter = (req, file, callback) => {\n  if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  callback(null, true);\n};\n\nexport const editFileName = (req, file, callback) => {\n  console.log('aqqq', req.body);\n  const fileExtName = extname(file.originalname);\n  callback(null, `${Date.now()}${fileExtName}`);\n};\n","export function onlyNumbers(value) {\n  return value.replace(/\\D+/g, '');\n}","import * as jwt from 'jsonwebtoken';\nexport function prepareToken(payload: any, expiresIn: string | number = '3d'): string {\n  const secret = process.env.TOKEN_SECRET;\n\n  return jwt.sign(payload, secret, { expiresIn });\n}\n\nexport function verifyToken(token: string): any {\n  return jwt.verify(token, process.env.TOKEN_SECRET);\n}\n\nexport function decoteToken(token: string) {\n  return jwt.decode(token);\n}","import * as bcrypt from 'bcryptjs';\nimport * as cryptoRandomString from 'crypto-random-string';\nimport { Password } from '../classes/password';\n\nexport const generateRandonPassword = (password?: string): Password => {\n  let plainText = cryptoRandomString({ length: 5, type: 'hex' });\n\n  if (password) {\n    plainText = password;\n  }\n\n  const hash = bcrypt.hashSync(plainText, 5);\n\n  return { plainText, hash };\n};\n\nexport const comparePasswordHash = async (password: string, hash: string): Promise<boolean> => {\n  return await bcrypt.compare(password, hash);\n};","export function parseSearch(search, searchBy) {\n  const searchFields = Array.isArray(searchBy)\n    ? searchBy.map(f => ({ [f]: { $contL: search } }))\n    : [{ [searchBy]: { $contL: search } }];\n\n  return searchFields;\n}\n","import { DefaultNamingStrategy, NamingStrategyInterface } from 'typeorm';\nimport { snakeCase } from 'typeorm/util/StringUtils';\n\nexport class SnakeNamingStrategy extends DefaultNamingStrategy implements NamingStrategyInterface {\n  tableName(className: string, customName: string): string {\n    return customName ? customName : snakeCase(className);\n  }\n\n  columnName(propertyName: string, customName: string, embeddedPrefixes: string[]): string {\n    return snakeCase(embeddedPrefixes.join('_')) + (customName ? customName : snakeCase(propertyName));\n  }\n\n  relationName(propertyName: string): string {\n    return snakeCase(propertyName);\n  }\n\n  joinColumnName(relationName: string, referencedColumnName: string): string {\n    return snakeCase(relationName + '_' + referencedColumnName);\n  }\n\n  joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    firstPropertyName: string,\n    _secondPropertyName: string\n  ): string {\n    return snakeCase(firstTableName + '_' + firstPropertyName.replace(/\\./gi, '_') + '_' + secondTableName);\n  }\n\n  joinTableColumnName(tableName: string, propertyName: string, columnName?: string): string {\n    return snakeCase(tableName + '_' + (columnName ? columnName : propertyName));\n  }\n\n  classTableInheritanceParentColumnName(parentTableName: string, parentTableIdPropertyName: string): string {\n    return snakeCase(`${parentTableName}_${parentTableIdPropertyName}`);\n  }\n}\n","module.exports = require(\"@nest-middlewares/helmet\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/common/exceptions/http.exception\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"@nestjsx/crud\");","module.exports = require(\"@nestjsx/crud-typeorm\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"crypto-random-string\");","module.exports = require(\"dotenv\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"moment\");","module.exports = require(\"nodemailer\");","module.exports = require(\"nodemailer-sendgrid\");","module.exports = require(\"path\");","module.exports = require(\"pug\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"typeorm/util/StringUtils\");"],"sourceRoot":""}