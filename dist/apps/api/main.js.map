{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"@nestjs/common\"","webpack:///./libs/api-interfaces/src/index.ts","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"typeorm/util/StringUtils\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjsx/crud\"","webpack:///external \"@nestjsx/crud-typeorm\"","webpack:///./libs/api-cruds/src/lib/cargos/cargos.service.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.service.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.service.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.service.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./libs/shared-things/src/lib/services/config.service.ts","webpack:///./libs/shared-things/src/lib/utils/snake-naming.strategy.ts","webpack:///external \"@nestjs/swagger\"","webpack:///./libs/api-cruds/src/index.ts","webpack:///./libs/shared-things/src/lib/shared-things.module.ts","webpack:///./libs/shared-things/src/lib/pipes/validation.pipe.ts","webpack:///./libs/api-cruds/src/lib/cargos/cargos.module.ts","webpack:///./libs/api-interfaces/src/lib/entities/cargos.entity.ts","webpack:///./libs/api-interfaces/src/lib/entities/locais.entity.ts","webpack:///./libs/api-interfaces/src/lib/entities/escolaridades.entity.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.module.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.module.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.module.ts","webpack:///external \"@nestjs/core\"","webpack:///./libs/shared-things/src/index.ts","webpack:///external \"dotenv\"","webpack:///external \"class-validator\"","webpack:///external \"class-transformer\"","webpack:///external \"@nestjs/common/exceptions/http.exception\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./libs/api-cruds/src/lib/cargos/cargos.controller.ts","webpack:///./libs/api-cruds/src/lib/escolaridades/escolaridades.controller.ts","webpack:///./libs/api-cruds/src/lib/locais/locais.controller.ts","webpack:///./libs/api-database/src/index.ts","webpack:///./libs/api-database/src/lib/api-database/api-database.controller.ts","webpack:///external \"@nest-middlewares/helmet\"","webpack:///external \"@nestjs/serve-static\"","webpack:///external \"path\"","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/config.ts","webpack:///./apps/api/src/app/database.config.ts","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"@nestjs/common\");","\nexport * from './lib/interfaces/api-interfaces';\nexport * from './lib/entities/cargos.entity';\n\nexport * from './lib/entities/locais.entity';\n\nexport * from './lib/entities/escolaridades.entity';\n\n// export * from './lib/cargos/cargos.entity';\nexport * from './lib/interfaces/cargos.interface';\n// export * from './lib/escolaridades/escolaridades.entity';\nexport * from './lib/interfaces/escolaridades.interface';\n\n\n// export * from './lib/entities/A001';\n// export * from './lib/entities/Configuracoes';\n// export * from './lib/entities/CotasPercentuais';\n// export * from './lib/entities/E001';\n// export * from './lib/entities/E002';\n// export * from './lib/entities/E003';\n// export * from './lib/entities/E004';\n\n\n","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"typeorm/util/StringUtils\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjsx/crud\");","module.exports = require(\"@nestjsx/crud-typeorm\");","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CargoEntity } from '@meto/api-interfaces';\n\n\n@Injectable()\nexport class CargosService extends TypeOrmCrudService<CargoEntity> {\n  constructor(@InjectRepository(CargoEntity) thisRepository: Repository<CargoEntity>) {\n    super(thisRepository);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { EscolaridadeEntity  } from '@meto/api-interfaces';\n\n@Injectable()\nexport class EscolaridadesService extends TypeOrmCrudService<EscolaridadeEntity> {\n  constructor(@InjectRepository(EscolaridadeEntity) thisRepository: Repository<EscolaridadeEntity>) {\n    super(thisRepository);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmCrudService } from '@nestjsx/crud-typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { LocalEntity } from '@meto/api-interfaces';\n\n@Injectable()\nexport class LocaisService extends TypeOrmCrudService<LocalEntity> {\n  constructor(@InjectRepository(LocalEntity) thisRepository: Repository<LocalEntity>) {\n    super(thisRepository);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { EntityManager } from 'typeorm';\n\n@Injectable()\nexport class ApiDatabaseService {\n  constructor(private readonly entityManager: EntityManager) {}\n\n  async rawSQL(sqlQuery: any) {\n    const rawData = await this.entityManager.query(sqlQuery);\n    return rawData;\n  }\n\n  tableFields(tableName: string) {\n    const rawData = this.entityManager.query(`SHOW COLUMNS FROM ${tableName}`);\n    return rawData;\n  }\n}\n\n// const rawData = await manager.query(`SELECT * FROM USERS`);\n// `SHOW COLUMNS FROM City`\n","import { Injectable } from '@nestjs/common';\nimport { Message } from '@meto/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): any {\n    return { message: 'Welcome to api!', hora: new Date() };\n  }\n}\n","import { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport * as dotenv from 'dotenv';\nimport { SnakeNamingStrategy } from '../utils/snake-naming.strategy';\n\n// import { IAwsConfig } from '../../interfaces/IAwsConfig';\n// import { UserSubscriber } from '../entity-subscribers/user-subscriber';\n\nexport class ConfigService {\n  constructor() {\n    const nodeEnv = this.nodeEnv;\n    dotenv.config({\n      path: `.${nodeEnv}.env`,\n    });\n\n    // Replace \\\\n with \\n to support multiline strings in AWS\n    for (const envName of Object.keys(process.env)) {\n      process.env[envName] = process.env[envName].replace(/\\\\n/g, '\\n');\n    }\n  }\n\n  public get(key: string): string {\n    return process.env[key];\n  }\n\n  public getNumber(key: string): number {\n    return Number(this.get(key));\n  }\n\n  get nodeEnv(): string {\n    return this.get('NODE_ENV') || 'development';\n  }\n\n  get typeOrmConfig(): TypeOrmModuleOptions {\n    // let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}'];\n    // let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n    let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}',__dirname +  '../../libs/api-interfaces/**/*.entity{.ts,.js}'];\n    let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n\n    if ((<any>module).hot) {\n      const entityContext = (<any>require).context('./../../modules', true, /\\.entity\\.ts$/);\n      entities = entityContext.keys().map(id => {\n        const entityModule = entityContext(id);\n        const [entity] = Object.values(entityModule);\n        return entity;\n      });\n      const migrationContext = (<any>require).context('./../../migrations', false, /\\.ts$/);\n      migrations = migrationContext.keys().map(id => {\n        const migrationModule = migrationContext(id);\n        const [migration] = Object.values(migrationModule);\n        return migration;\n      });\n    }\n\n    return {\n      entities,\n      // migrations,\n      keepConnectionAlive: true,\n      type: 'mysql',\n      port: 3306,\n      host: this.get('DB_METO_HOST'),\n      username: this.get('DB_METO_USERNAME'),\n      password: this.get('DB_METO_PASSWORD'),\n      database: this.get('DB_METO_DATABASE'),\n      // username: process.env.DB_METO_USERNAME,\n      // password: process.env.DB_METO_PASSWORD,\n      // database: process.env.DB_METO_DATABASE,\n      // subscribers: [UserSubscriber],\n      migrationsRun: true,\n      logging: this.nodeEnv === 'development',\n      namingStrategy: new SnakeNamingStrategy(),\n      synchronize: false,\n      autoLoadEntities: true,\n    };\n  }\n\n  // get awsS3Config(): IAwsConfig {\n  //   return {\n  //     accessKeyId: this.get('AWS_S3_ACCESS_KEY_ID'),\n  //     secretAccessKey: this.get('AWS_S3_SECRET_ACCESS_KEY'),\n  //     bucketName: this.get('S3_BUCKET_NAME'),\n  //   };\n  // }\n}\n","import { DefaultNamingStrategy, NamingStrategyInterface } from 'typeorm';\nimport { snakeCase } from 'typeorm/util/StringUtils';\n\nexport class SnakeNamingStrategy extends DefaultNamingStrategy implements NamingStrategyInterface {\n  tableName(className: string, customName: string): string {\n    return customName ? customName : snakeCase(className);\n  }\n\n  columnName(propertyName: string, customName: string, embeddedPrefixes: string[]): string {\n    return snakeCase(embeddedPrefixes.join('_')) + (customName ? customName : snakeCase(propertyName));\n  }\n\n  relationName(propertyName: string): string {\n    return snakeCase(propertyName);\n  }\n\n  joinColumnName(relationName: string, referencedColumnName: string): string {\n    return snakeCase(relationName + '_' + referencedColumnName);\n  }\n\n  joinTableName(\n    firstTableName: string,\n    secondTableName: string,\n    firstPropertyName: string,\n    _secondPropertyName: string\n  ): string {\n    return snakeCase(firstTableName + '_' + firstPropertyName.replace(/\\./gi, '_') + '_' + secondTableName);\n  }\n\n  joinTableColumnName(tableName: string, propertyName: string, columnName?: string): string {\n    return snakeCase(tableName + '_' + (columnName ? columnName : propertyName));\n  }\n\n  classTableInheritanceParentColumnName(parentTableName: string, parentTableIdPropertyName: string): string {\n    return snakeCase(`${parentTableName}_${parentTableIdPropertyName}`);\n  }\n}\n","module.exports = require(\"@nestjs/swagger\");","export * from './lib/cargos/cargos.module';\nexport * from './lib/escolaridades/escolaridades.module';\nexport * from './lib/locais/locais.module';\n","import { Module } from '@nestjs/common';\nimport { ConfigService } from './services/config.service';\nconst providers = [ConfigService];\n@Module({\n  providers,\n  imports: [],\n\n  exports: [...providers],\n})\nexport class SharedThingsModule {}\n","import { PipeTransform, ArgumentMetadata, BadRequestException, HttpStatus, Injectable } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { HttpException } from '@nestjs/common/exceptions/http.exception';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n  async transform(value, metadata: ArgumentMetadata) {\n    if (!value) {\n      throw new BadRequestException('No data submitted');\n    }\n\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new HttpException(\n        { message: 'Input data validation failed', errors: this.buildError(errors) },\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    return value;\n  }\n\n  private buildError(errors) {\n    const result = {};\n    errors.forEach(el => {\n      let prop = el.property;\n      Object.entries(el.constraints).forEach(constraint => {\n        result[prop + constraint[0]] = `${constraint[1]}`;\n      });\n    });\n    return result;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find(type => metatype === type);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CargoEntity } from '@meto/api-interfaces';\nimport { CargosController } from './cargos.controller';\nimport { CargosService } from './cargos.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CargoEntity])],\n  controllers: [CargosController],\n  providers: [CargosService],\n})\nexport class CargosModule {}\n","\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('E001')\nexport class CargoEntity  {\n  @PrimaryGeneratedColumn()\n  IDE001: number;\n\n  @Column({unique: true, length: 60})\n  NOME: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  CREATED: Date;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP'})\n  UPDATED: Date;\n\n  @Column({ default: 'N', length: 1})\n  DELETED: string;\n\n  @Column({ default: 'A', length: 1 })\n  STS: string;\n\n}\n","import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Index('FK_G002IDG002_IDG002_idx', ['idg002'], {})\n@Index('FK_G004_G019_idx', ['idg019'], {})\n@Index('FK_G004_G021_idx', ['idg021'], {})\n@Index('FK_G004IDG004FK_IDG004', ['idg004Fk'], {})\n@Index('FK_IDE005_IDE005_idx', ['ide005'], {})\n@Index('FK_IDG002_IDG002_idx', ['idg002'], {})\n@Index('FK_IDG003_IDG003_idx', ['idg003'], {})\n@Index('FK_RUBRICACOTAREG_IDG019_idx', ['rubricacotareg'], {})\n@Index('FK_RUBRICAPEC_IDG019_idx', ['rubricapec'], {})\n@Index('FK_SEDE_IDG001_idx', ['sede'], {})\n@Index('G004_UN', ['cnpj'], { unique: true })\n@Entity('G004', { schema: 'metodista_local' })\nexport class LocalEntity {\n  @PrimaryGeneratedColumn({ type: 'int', name: 'IDG004' })\n  idg004: number;\n\n  @Column('int', { name: 'IDG003', nullable: true })\n  idg003: number | null;\n\n  @Column('varchar', { name: 'NOME', nullable: true, length: 60 })\n  nome: string | null;\n\n  @Column('varchar', { name: 'CNPJ', nullable: true, unique: true, length: 18 })\n  cnpj: string | null;\n\n  @Column('date', { name: 'FUNDACAO', nullable: true })\n  fundacao: string | null;\n\n  @Column('int', { name: 'IDE005', nullable: true })\n  ide005: number | null;\n\n  @Column('varchar', { name: 'OBSERVAC', nullable: true, length: 500 })\n  observac: string | null;\n\n  @Column('varchar', { name: 'EMAILINS', nullable: true, length: 60 })\n  emailins: string | null;\n\n  @Column('varchar', { name: 'SITE', nullable: true, length: 60 })\n  site: string | null;\n\n  @Column('varchar', { name: 'FACEBOOK', nullable: true, length: 60 })\n  facebook: string | null;\n\n  @Column('varchar', { name: 'TWITTER', nullable: true, length: 60 })\n  twitter: string | null;\n\n  @Column('varchar', { name: 'YOUTUBE', nullable: true, length: 60 })\n  youtube: string | null;\n\n  @Column('varchar', { name: 'INSTAG', nullable: true, length: 60 })\n  instag: string | null;\n\n  @Column('varchar', { name: 'TEL1', nullable: true, length: 45 })\n  tel1: string | null;\n\n  @Column('varchar', { name: 'TEL2', nullable: true, length: 45 })\n  tel2: string | null;\n\n  @Column('varchar', { name: 'TEL3', nullable: true, length: 45 })\n  tel3: string | null;\n\n  @Column('varchar', { name: 'TEL4', nullable: true, length: 45 })\n  tel4: string | null;\n\n  @Column('datetime', { name: 'CREATED', nullable: true })\n  created: Date | null;\n\n  @Column('datetime', { name: 'UPDATED', nullable: true })\n  updated: Date | null;\n\n  @Column('varchar', {\n    name: 'DELETED',\n    nullable: true,\n    length: 1,\n    default: () => \"'N'\",\n  })\n  deleted: string | null;\n\n  @Column('varchar', {\n    name: 'STS',\n    nullable: true,\n    length: 1,\n    default: () => \"'A'\",\n  })\n  sts: string | null;\n\n  @Column('timestamp', {\n    name: 'DESCONTO_DT',\n    default: () => \"'1970-01-01 03:00:01'\",\n  })\n  descontoDt: Date;\n\n  @Column('decimal', {\n    name: 'DESCONTO_PERCENTUAL',\n    nullable: true,\n    precision: 10,\n    scale: 2,\n  })\n  descontoPercentual: string | null;\n\n  @Column('varchar', { name: 'CEP', nullable: true, length: 9 })\n  cep: string | null;\n\n  @Column('varchar', { name: 'LOGRADOU', nullable: true, length: 45 })\n  logradou: string | null;\n\n  @Column('int', { name: 'NUMERO', nullable: true })\n  numero: number | null;\n\n  @Column('varchar', { name: 'COMPLEM', nullable: true, length: 60 })\n  complem: string | null;\n\n  @Column('varchar', { name: 'BAIRRO', nullable: true, length: 60 })\n  bairro: string | null;\n\n  @Column('varchar', { name: 'CIDADE', nullable: true, length: 60 })\n  cidade: string | null;\n\n  @Column('varchar', { name: 'ESTADO', nullable: true, length: 2 })\n  estado: string | null;\n\n  @Column('varchar', { name: 'HISTORIA', nullable: true, length: 60000 })\n  historia: string | null;\n\n  @Column('int', { name: 'IDG002', nullable: true })\n  idg002: number | null;\n\n  @Column('varchar', { name: 'EMAILPAS', nullable: true, length: 60 })\n  emailpas: string | null;\n\n  @Column('varchar', { name: 'EMAILSEC', nullable: true, length: 60 })\n  emailsec: string | null;\n\n  @Column('int', { name: 'IDG004FK', nullable: true })\n  idg004Fk: number | null;\n\n  @Column('int', { name: 'SEDE', nullable: true })\n  sede: number | null;\n\n  @Column('int', { name: 'IDG019', nullable: true })\n  idg019: number | null;\n\n  @Column('int', { name: 'IDG021', nullable: true })\n  idg021: number | null;\n\n  @Column('varchar', { name: 'RAZAOSOCIAL', nullable: true, length: 100 })\n  razaosocial: string | null;\n\n  @Column('int', { name: 'RUBRICAPEC', nullable: true })\n  rubricapec: number | null;\n\n  @Column('int', { name: 'RUBRICACOTAREG', nullable: true })\n  rubricacotareg: number | null;\n}\n","\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n// @Entity('E002')\n@Entity({ name: 'E002' })\nexport class EscolaridadeEntity {\n  @PrimaryGeneratedColumn()\n  IDE002: number;\n\n  @Column({ unique: true, length: 60 })\n  NOME: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  CREATED: Date;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  UPDATED: Date;\n\n  @Column({ default: 'N', length: 1 })\n  DELETED: string;\n\n  @Column({ default: 'A', length: 1 })\n  STS: string;\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EscolaridadeEntity } from '@meto/api-interfaces';\nimport { EscolaridadesController } from './escolaridades.controller';\nimport { EscolaridadesService } from './escolaridades.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([EscolaridadeEntity])],\n  controllers: [EscolaridadesController],\n  providers: [EscolaridadesService],\n})\nexport class EscolaridadesModule {}\n","import { LocalEntity } from '@meto/api-interfaces';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { LocaisController } from './locais.controller';\nimport { LocaisService } from './locais.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([LocalEntity])],\n  controllers: [LocaisController],\n  providers: [LocaisService],\n})\nexport class LocaisModule {}\n","import { Module } from '@nestjs/common';\nimport { ApiDatabaseController } from './api-database.controller';\nimport { ApiDatabaseService } from './api-database.service';\n\n@Module({\n  controllers: [ApiDatabaseController],\n  providers: [ApiDatabaseService],\n  exports: [],\n})\nexport class ApiDatabaseModule {}\n","module.exports = require(\"@nestjs/core\");","export * from './lib/services/config.service';\n\nexport * from './lib/utils/snake-naming.strategy'\n\nexport * from './lib/shared-things.module';\nexport * from './lib/pipes/validation.pipe';\n","module.exports = require(\"dotenv\");","module.exports = require(\"class-validator\");","module.exports = require(\"class-transformer\");","module.exports = require(\"@nestjs/common/exceptions/http.exception\");","import { CargosModule, EscolaridadesModule, LocaisModule } from '@meto/api-cruds';\nimport { ApiDatabaseModule } from '@meto/api-database';\nimport { HelmetMiddleware } from '@nest-middlewares/helmet';\nimport { Logger, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { join } from 'path';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { config } from './config';\nimport { DatabaseConfig } from './database.config';\n\n@Module({\n  imports: [\n       // BEGIN INSERT\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'nx-app'),\n      exclude: ['/api*']\n    }),\n    // END INSERT\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    HelmetMiddleware,\n    ApiDatabaseModule,\n    CargosModule,\n    LocaisModule,\n    EscolaridadesModule,\n    // GraphQLModule.forRoot({\n    //   typePaths: ['./**/*.graphql'],\n    //   definitions: { path: join(process.cwd(), 'src/graphql.ts') },\n    //   context: ({ req }) => ({ headers: req.headers }),\n    // }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n\n    // TypeOrmModule.forRootAsync({\n    //   imports: [SharedThingsModule],\n    //   useFactory: (configService: ConfigService) => configService.typeOrmConfig,\n    //   inject: [ConfigService],\n    // }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {\n  constructor() {\n    console.log('\\n\\n\\n\\n','=> ', process.env.NODE_ENV);\n\n    console.log('=> ', __dirname);\n    Logger.debug('ENVIRONMENT =>', process.env.NODE_ENV);\n    Logger.debug('API_METO_PORT =>', process.env.API_METO_PORT);\n    Logger.debug('HOSTNAME =>', process.env.DB_METO_HOSTNAME);\n    Logger.debug('USERNAME =>', process.env.DB_METO_USERNAME);\n    Logger.debug('PASSWORD =>', process.env.DB_METO_PASSWORD);\n    Logger.debug(': DATABASE', process.env.DB_METO_DATABASE);\n  }\n}\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { CargoEntity } from '@meto/api-interfaces';\nimport { CargosService } from './cargos.service';\n\n@Crud({\n  model: {\n    type: CargoEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDE001',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('cargos')\nexport class CargosController implements CrudController<CargoEntity> {\n  constructor(public service: CargosService) {}\n}\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { CargoEntity, EscolaridadeEntity } from '@meto/api-interfaces';\nimport { EscolaridadesService } from './escolaridades.service';\n\n@Crud({\n  model: {\n    type: CargoEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDE002',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('escolaridades')\nexport class EscolaridadesController implements CrudController<EscolaridadeEntity> {\n  constructor(public service: EscolaridadesService) {}\n}\n","import { Controller } from '@nestjs/common';\nimport { Crud, CrudController } from '@nestjsx/crud';\nimport { LocalEntity } from '@meto/api-interfaces';\nimport { LocaisService } from './locais.service';\n\n@Crud({\n  model: {\n    type: LocalEntity,\n  },\n  query: {\n    limit: 5,\n    cache: 2000,\n  },\n  params: {\n    id: {\n      field: 'IDG004',\n      type: 'number',\n      primary: true,\n    },\n  },\n})\n@Controller('locais')\nexport class LocaisController implements CrudController<LocalEntity> {\n  constructor(public service: LocaisService) {}\n}\n","export * from './lib/api-database/api-database.module';\n","import { Controller, Get, Logger, Param, Query } from '@nestjs/common';\n\nimport { ApiDatabaseService } from './api-database.service';\nimport { get } from 'http';\n\n@Controller('api-database')\nexport class ApiDatabaseController {\n  constructor(private apiDatabaseService: ApiDatabaseService) {}\n\n  @Get('raw-sql')\n  async rawSql(@Query() query): Promise<any[]> {\n    return this.apiDatabaseService.rawSQL(query.querySQL);\n  }\n\n  @Get('table-fields')\n  async tableFields(@Query() query): Promise<any[]> {\n    return this.apiDatabaseService.tableFields(query.tableName);\n  }\n}\n\n\n// http://localhost:3333/api/api-database/raw-sql?querySQL=select%20*%20from%20G026\n// http://localhost:3333/api/api-database/table-fields?tableName=G034\n","module.exports = require(\"@nest-middlewares/helmet\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"path\");","import { Controller, Get } from '@nestjs/common';\n\nimport { Message } from '@meto/api-interfaces';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  getData(): Message {\n    return this.appService.getData();\n  }\n}\n","import { CargoEntity, EscolaridadeEntity } from '@meto/api-interfaces';\n\nexport const config = () => ({\n  port: Number(process.env.PORT),\n  jwtSecret: process.env.JWT_SECRET,\n  database: {\n    type: 'mysql',\n    host: process.env.DB_METO_HOSTNAME,\n    port: 3306,\n    username: process.env.DB_METO_USERNAME,\n    password: process.env.DB_METO_PASSWORD,\n    database: process.env.DB_METO_DATABASE,\n    synchronize: false,\n    logging: true,\n    autoLoadEntities: true\n  },\n});\n","import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createTypeOrmOptions() {\n    const dbConfig = this.configService.get('database');\n    console.log('DB CONFIG', dbConfig)\n    return this.configService.get('database');\n  }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\nimport { BunyanLoggerService } from '@lupu60/nestjs-toolbox';\nimport { Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nimport { ValidationPipe } from '@meto/shared-things';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  // const app = await NestFactory.create(AppModule, {\n  //   logger: new BunyanLoggerService({\n  //     projectName: 'SIMPLES',\n  //     formatterOptions: {\n  //       outputMode: 'short',\n  //       color: true,\n  //       levelInString: true,\n  //       // colorFromLevel: any\n  //     },\n  //     customStreams: [\n  //       {\n  //         path: './api-log.log',\n  //       },\n  //     ],\n  //   }),\n  // });\n  const app = await NestFactory.create(AppModule);\n\n  app.useGlobalPipes(new ValidationPipe());\n\n  // const app = await NestFactory.create(AppModule, { logger: true });\n  // app.useLogger(app.get(Logger));\n\n  app.enableCors();\n  const configService = app.get(ConfigService);\n\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = configService.get('API_METO_PORT');\n\n  const options = new DocumentBuilder()\n    .setTitle('Simples API Carlos')\n    .setDescription('API NestJS para Base')\n    .setVersion('1.0')\n    // .setBasePath('api')\n    .addBearerAuth()\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('/docs', app, document);\n\n  await app.listen(port, () => {\n    Logger.debug('AMBIENTE =>', process.env.NODE_ENV);\n\n    Logger.debug('API_METO_PORT =>', process.env.API_METO_PORT);\n    Logger.debug('HOSTNAME =>', process.env.DB_METO_HOSTNAME);\n    Logger.debug('USERNAME =>', process.env.DB_METO_USERNAME);\n    Logger.debug('PASSWORD =>', process.env.DB_METO_PASSWORD);\n    Logger.debug(': DATABASE', process.env.DB_METO_DATABASE);\n    Logger.debug('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}